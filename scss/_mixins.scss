
@mixin helvetica {
  font-family: "HelveticaNeueLight", "HelveticaNeue-Light", "Helvetica Neue Light", "HelveticaNeue", "Helvetica Neue", 'TeXGyreHerosRegular', "Helvetica", "Tahoma", "Geneva", "Arial", sans-serif;
  font-weight: 300;
  font-stretch: normal;
  font-style: normal;
}

// @mixin vcenter {
//   position: relative;
//   top: 50%;
//   transform: translateY(-50%);
// }

@mixin clear {
  display: inline-block;
  width: 100%;
}

@mixin respond($sizes...) {
  @each $size in $sizes {
    @include respond-to(#{$size}) { @content; }
  }
}

@mixin respond-to($media) {
  @if $media == small {
    @media only screen and (max-width: $break-small) { @content; }
  }
  @else if $media == medium {
    @media only screen and (min-width: $break-small + 1) and (max-width: $break-medium) { @content; }
  }
  @else if $media == large {
    @media only screen and (min-width: $break-medium + 1) and (max-width: $break-large) { @content; }
  }
  @else if $media == wide {
    @media only screen and (min-width: $break-large + 1) { @content; }
  }
}


@mixin only-small {
  @include respond(medium, large) { display: none !important; }
}
@mixin only-medium {
  @include respond(small, large) { display: none !important; }
}
@mixin only-large {
  @include respond(small, medium) { display: none !important; }
}
@mixin except-small {
  @include respond(small) { display: none !important; }
}
@mixin except-medium {
  @include respond(medium) { display: none !important; }
}
@mixin except-large {
  @include respond(large) { display: none !important; }
}

.only-small    { @include only-small; }
.only-medium   { @include only-medium; }
.only-large    { @include only-large; }
.except-small  { @include except-small; }
.except-medium { @include except-medium; }
.except-large  { @include except-large; }
